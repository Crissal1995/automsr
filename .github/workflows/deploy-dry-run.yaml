---
name: Deploy Dry run

on:
  pull_request:
    branches:
      - main

jobs:
  tag:
    name: Get tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get-tag.outputs.tag }}
    steps:
    - name: Get PR labels
      id: pr-labels
      uses: joerick/pr-labels-action@v1.0.9
    - name: Get highest SemVer tag
      id: get-tag
      env:
        json: ${{ steps.pr-labels.outputs.labels-object }}
      run: |
        no_impact=$(echo $json | jq .noimpact )
        patch=$(echo $json | jq .patch )
        minor=$(echo $json | jq .minor )
        major=$(echo $json | jq .major )

        tags_count=0

        if [[ $no_impact == "true"  ]]; then
          echo "Found tag: no_impact"
          echo "No deploy will be performed."
          echo "tag=no_impact" >> "$GITHUB_OUTPUT"
          tags_count=$((tags_count + 1))
        fi

        if [[ $patch == "true" ]]; then
          echo "Found tag: patch"
          echo "tag=patch" >> "$GITHUB_OUTPUT"
          tags_count=$((tags_count + 1))
        fi

        if [[ $minor == "true" ]]; then
          echo "Found tag: minor"
          echo "tag=minor" >> "$GITHUB_OUTPUT"
          tags_count=$((tags_count + 1))
        fi

        if [[ $major == "true" ]]; then
          echo "Found tag: major"
          echo "tag=major" >> "$GITHUB_OUTPUT"
          tags_count=$((tags_count + 1))
        fi

        if [[ $tags_count -ne 1 ]]; then
          echo "Was expecting one and only one SemVer tag to be set. Found: $tags_count"
          exit 1
        fi

  deploy:
    name: Deploy Dry run
    runs-on: ubuntu-latest
    needs:
      - tag
    if: needs.tag.outputs.tag != "" && needs.tag.outputs.tag != "no_impact"
    env:
      POETRY_HOME: /home/runner/poetry
      POETRY_BIN: /home/runner/poetry/bin/poetry
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}  # to enable force-push for `add-and-commit` action
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          ${POETRY_BIN} --version
      - name: Bump version
        id: bump-version
        env:
          tag: ${{ needs.tag.outputs.tag }}
        run: |
          $POETRY_BIN version $tag
          new_tag=$($POETRY_BIN version --short)
          new_tag_with_prefix="v$new_tag"
          echo "new_tag=$new_tag_with_prefix" >> "$GITHUB_OUTPUT"
      - name: Build
        run: $POETRY_BIN build
      - name: Publish
        run: $POETRY_BIN publish --dry-run
      - name: Commit Version bump
        uses: EndBug/add-and-commit@v9.1.3
        with:
          author_name: Cristiano Salerno
          author_email: cristianosalerno1@gmail.com
          message: "Automatic version bump"
          add: "pyproject.toml"  # the only file affected by `poetry version <tag>`
          push: false  # we don't want to pollute origin
